name: üß™ Validate Pubspec
on:
  workflow_call:

jobs:
  validate-pubspec-version:
    runs-on: macos-latest
    steps:
      - name: setup-repo
        uses: actions/checkout@v4
      - name: Fetch base branch ('${{ github.base_ref }}')
        run: |
          echo "Attempting to fetch base branch: ${{ github.base_ref }}"
          # Fetch the specific base branch from the remote and create a local tracking branch.
          # The `+` ensures the local ref is updated even if it's not a fast-forward.
          git fetch origin +refs/heads/${{ github.base_ref }}:refs/remotes/origin/${{ github.base_ref }}
          # Ensure a local branch 'stable' (or whatever base_ref is) exists and points to the fetched commit
          git branch ${{ github.base_ref }} origin/${{ github.base_ref }}
        # Add error checking for the fetch if needed:
        # if [ $? -ne 0 ]; then
        #   echo "Failed to fetch base branch ${{ github.base_ref }}"
        #   exit 1
        # fi

      - name: get-base-branch
        run: |
          echo "GITHUB_BASE_REF is: ${{ github.base_ref }}"
          git show ${{ github.base_ref }}:pubspec.yaml

      - name: verify-pubspec-version
        run: |
          # 1. grab the semantic "version" value from pubspec.yaml source branch as a string
          # 2. grab the semantic "version" value from pubspec.yaml source branch as a string
          # 3. The version have a "+" for that shows the build number, on the right side of the "+"
          # 4. verify that the build number is greater in the source branch than the stable branch
          # 5. also verify that the version is greater that in the base branch
          # e.g. 
          #    0.1.0+1 > 1.1.0+0 // false
          #    1.1.0+1 > 1.0.0+1 // false
          #    1.1.1+1 > 1.1.1+0 // false
          #    1.1.1+1 > 1.1.2+1 // false
          #    1.1.1+1 > 1.1.1+2 // false
          #    1.1.1+1 > 1.1.2+2 // true
          #    1.1.1+1 > 1.2.0+2 // true

          source_version=$(grep -E '^version:' pubspec.yaml | awk '{print $2}')
          base_version=$(git show $GITHUB_BASE_REF:pubspec.yaml | grep -E '^version:' | awk '{print $2}')
          source_version_number=$(echo $source_version | cut -d '+' -f 1)
          base_version_number=$(echo $base_version | cut -d '+' -f 1)
          source_build_number=$(echo $source_version | cut -d '+' -f 2)
          base_build_number=$(echo $base_version | cut -d '+' -f 2)
          if [[ -z "$source_version" || -z "$base_version" ]]; then
              echo "‚ùóÔ∏è Error: version not found in pubspec.yaml"
              exit 1
          fi
          if [[ "$source_version_number" == "$base_version_number" && "$source_build_number" -le "$base_build_number" ]]; then
              echo "‚úãÔ∏è Hold on, source v($source_version) MUST be greater than base v($base_version)"
              exit 1
          fi
            echo "Source version: $source_version"
            echo "Base version: $base_version"
            echo "Source version number: $source_version_number"
            echo "Base version number: $base_version_number"
            echo "Source build number: $source_build_number"
            echo "Base build number: $base_build_number"
          if [[ "$source_version_number" < "$base_version_number" ]]; then
              echo "‚úãÔ∏è source v($source_version_number) MUST be greater than base v($base_version_number)"
              exit 1
          elif [[ "$source_version_number" == "$base_version_number" && "$source_build_number" -le "$base_build_number" ]]; then
              echo "üõëÔ∏è source build ($source_build_number) MUST be greater than base build ($base_build_number)"
              exit 1
          else
              echo "‚úÖ pubspec version looks valid"
          fi
          echo "ü´° You're good to go, source $source_version is greater than base $base_version"
