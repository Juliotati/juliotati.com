name: 🔨 Build Only
on:
  workflow_call:
    inputs:
      buildEnvironment:
        required: true
        type: string
        description: 'The target environment to build for'
      buildWeb:
        required: false
        type: boolean
        default: true
        description: 'Whether to build for web'
      buildAndroid:
        required: false
        type: boolean
        default: false
        description: 'Whether to build for android'
      buildIOS:
        required: false
        type: boolean
        default: false
        description: 'Whether to build for iOS'
      buildMacOS:
        required: false
        type: boolean
        default: false
        description: 'Whether to build for macOS'
      buildWindows:
        required: false
        type: boolean
        default: false
        description: 'Whether to build for windows'
      flutterVersion:
        required: false
        type: string
        default: '3.27.1'
        description: 'The version of Flutter to use for the workflow run'
      renderer:
        required: false
        type: string
        default: 'wasm'
        description: 'Web renderer your build should build for'

    secrets:
      encodedContent:
        required: false
        description: 'Encoded json file'

env:
  SUCCESS_MSG: "build succeeded!! 🚀"
  FAILURE_MSG: "build is K.I.A! 🚨"

jobs:
  build-web:
    if: ${{ inputs.buildWeb }}
    runs-on: macos-latest
    environment: ${{ inputs.buildEnvironment }}
    env:
      ENCODED_CONFIGS: ${{ secrets.encodedContent }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'zulu'
      - name: setup-flutter
        uses: subosito/flutter-action@v2
        with:
          cache: true
          cache-key: 'flutter-macos-stable-${{ inputs.flutterVersion }}-x64'
          cache-path: '${{ runner.tool_cache }}/flutter-macos-stable-${{ inputs.flutterVersion }}-x64-hash'
          pub-cache-key: 'flutter-pub-macos-stable-${{ inputs.flutterVersion }}-x64-hash'
          pub-cache-path: '${{ runner.tool_cache }}/flutter/stable-${{ inputs.flutterVersion }}-x64'
          channel: 'stable'
          flutter-version: ${{ inputs.flutterVersion }}
      - name: build-web-app
        run: |
          trap 'echo "🚨 web ${{ env.FAILURE_MSG }}"' ERR
          flutter pub get
          if [ "$ENCODED_CONFIGS" == "" ]; then
            echo "⚒️ Building WITHOUT extra config"
            if [ "${{ inputs.renderer }}" != "wasm" ]; then
              echo "🔥 Using web ${{ inputs.renderer }} renderer"
              flutter build web --release --web-renderer ${{ inputs.renderer }}
            else
              echo "🔥 Using wasm renderer"
              flutter build web --wasm
            fi
            echo "🔥 web ${{ env.SUCCESS_MSG }}"
            exit 0
          fi

          echo "⚒️ SETTING-UP extra config file"
          echo $ENCODED_CONFIGS | base64 --decode > config.json

          if [ "${{ inputs.renderer }}" != "wasm" ]; then
            echo "🔥Preparing to release with ${{ inputs.renderer }} renderer"
            flutter build web --release --web-renderer ${{ inputs.renderer }} --dart-define-from-file=config.json
          else
            echo "🔥Preparing to release with wasm renderer"
            flutter build web --wasm --dart-define-from-file=config.json
          fi
          echo "🔥 web ${{ env.SUCCESS_MSG }}"

  build-android:
    if: ${{ inputs.buildAndroid }}
    runs-on: macos-latest
    environment: ${{ inputs.buildEnvironment }}
    env:
      ENCODED_CONFIGS: ${{ secrets.encodedContent }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'zulu'

      - name: setup-flutter
        uses: subosito/flutter-action@v2
        with:
          cache: true
          cache-key: 'flutter-macos-stable-${{ inputs.flutterVersion }}-x64'
          cache-path: '${{ runner.tool_cache }}/flutter-macos-stable-${{ inputs.flutterVersion }}-x64-hash'
          pub-cache-key: 'flutter-pub-macos-stable-${{ inputs.flutterVersion }}-x64-hash'
          pub-cache-path: '${{ runner.tool_cache }}/flutter/stable-${{ inputs.flutterVersion }}-x64'
          channel: 'stable'
          flutter-version: ${{ inputs.flutterVersion }}

      - name: build-android-app
        run: |
          trap 'echo "🚨 android ${{ env.FAILURE_MSG }}"' ERR
          if [ "$ENCODED_CONFIGS" == "" ]; then
            echo "⚒️ Building WITHOUT extra config"
            flutter pub get
            flutter build apk --profile
          else
            echo $ENCODED_CONFIGS | base64 --decode > config.json
            flutter pub get
            flutter build apk --profile --dart-define-from-file=config.json
          fi
          echo "🔥 android ${{ env.SUCCESS_MSG }}"


  build-ios:
    if: ${{ inputs.buildIOS }}
    runs-on: macos-latest
    environment: ${{ inputs.buildEnvironment }}
    env:
      ENCODED_CONFIGS: ${{ secrets.encodedContent }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'zulu'

      - name: setup-flutter
        uses: subosito/flutter-action@v2
        with:
          cache: true
          cache-key: 'flutter-macos-stable-${{ inputs.flutterVersion }}-x64'
          cache-path: '${{ runner.tool_cache }}/flutter-macos-stable-${{ inputs.flutterVersion }}-x64-hash'
          pub-cache-key: 'flutter-pub-macos-stable-${{ inputs.flutterVersion }}-x64-hash'
          pub-cache-path: '${{ runner.tool_cache }}/flutter/stable-${{ inputs.flutterVersion }}-x64'
          channel: 'stable'
          flutter-version: ${{ inputs.flutterVersion }}

      - name: build-iOS-app
        run: |
          trap 'echo "🚨 iOS ${{ env.FAILURE_MSG }}"' ERR
          if [ "$ENCODED_CONFIGS" == "" ]; then
            echo "⚒️ Building WITHOUT extra config"
            flutter pub get
            flutter build ios --release --no-codesign
          else
            echo $ENCODED_CONFIGS | base64 --decode > config.json
            flutter pub get
            flutter build ios --release --no-codesign --dart-define-from-file=config.json
          fi
          echo "🔥 iOS ${{ env.SUCCESS_MSG }}"

  build-macos:
    if: ${{ inputs.buildMacOS }}
    runs-on: macos-latest
    environment: ${{ inputs.buildEnvironment }}
    env:
      ENCODED_CONFIGS: ${{ secrets.encodedContent }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'zulu'

      - name: setup-flutter
        uses: subosito/flutter-action@v2
        with:
          cache: true
          cache-key: 'flutter-macos-stable-${{ inputs.flutterVersion }}-x64'
          cache-path: '${{ runner.tool_cache }}/flutter-macos-stable-${{ inputs.flutterVersion }}-x64-hash'
          pub-cache-key: 'flutter-pub-macos-stable-${{ inputs.flutterVersion }}-x64-hash'
          pub-cache-path: '${{ runner.tool_cache }}/flutter/stable-${{ inputs.flutterVersion }}-x64'
          channel: 'stable'
          flutter-version: ${{ inputs.flutterVersion }}

      - name: build-macOS-app
        run: |
          trap 'echo "🚨 macOS ${{ env.FAILURE_MSG }}"' ERR
          if [ "$ENCODED_CONFIGS" == "" ]; then
            echo "⚒️ Building WITHOUT extra config"
            flutter pub get
            flutter build macos --release
          else
            echo $ENCODED_CONFIGS | base64 --decode > config.json
            flutter config --enable-macos-desktop
            flutter pub get
            flutter build macos --release --dart-define-from-file=config.json
          fi
          echo "🔥 macOS ${{ env.SUCCESS_MSG }}"

  build-windows:
    if: ${{ inputs.buildWindows }}
    runs-on: windows-latest
    environment: ${{ inputs.buildEnvironment }}
    env:
      ENCODED_CONFIGS: ${{ secrets.encodedContent }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'zulu'

      - name: setup-flutter
        uses: subosito/flutter-action@v2
        with:
          cache: true
          cache-key: 'flutter-macos-stable-${{ inputs.flutterVersion }}-x64'
          cache-path: '${{ runner.tool_cache }}/flutter-macos-stable-${{ inputs.flutterVersion }}-x64-hash'
          pub-cache-key: 'flutter-pub-macos-stable-${{ inputs.flutterVersion }}-x64-hash'
          pub-cache-path: '${{ runner.tool_cache }}/flutter/stable-${{ inputs.flutterVersion }}-x64'
          channel: 'stable'
          flutter-version: ${{ inputs.flutterVersion }}

      - uses: dart-lang/setup-dart@v1
      - name: build-windows-app
        shell: bash
        run: |
          trap 'echo "🚨 windows ${{ env.FAILURE_MSG }}"' ERR
          if [ "$ENCODED_CONFIGS" == "" ]; then
            echo "⚒️ Building WITHOUT extra config"
            flutter pub get
            flutter build windows --release
          else
            echo $ENCODED_CONFIGS | base64 --decode > config.json
            flutter config --enable-windows-desktop
            flutter pub get
            flutter build windows --release --dart-define-from-file=config.json
          fi
          echo "🔥 windows ${{ env.SUCCESS_MSG }}"
