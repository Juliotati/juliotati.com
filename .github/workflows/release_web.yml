name: Web deployments
on:
  workflow_call:
    inputs:
      target:
        required: true
        type: string
        description: 'The target environment to deploy to'
      flutterVersion:
        required: true
        type: string
        default: '3.24.1'
        description: 'The version of Flutter to use for the workflow run'
      renderer:
        required: false
        type: string
        default: 'wasm'
        description: 'The renderer to use for the workflow run'
      projectId:
        required: true
        type: string
        description: 'Your Firebase project ID'
    secrets:
      repoToken:
        required: true
        description: 'Your repos GitHub token'
      firebaseServiceAccount:
        required: true
        description: 'Projects Firebase service account'

jobs:
  build-and-deploy:
    runs-on: macos-latest
    environment: ${{ inputs.target }}
    env:
      FLUTTER_VERSION: '${{ inputs.flutterVersion }}'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v2
        with:
          java-version: '12.x'
          distribution: 'zulu'
      - uses: subosito/flutter-action@v2
        with:
          cache: true
          cache-key: 'flutter-macos-stable-$FLUTTER_VERSION-x64'
          cache-path: '${{ runner.tool_cache }}/flutter-macos-stable-$FLUTTER_VERSION-x64-hash'
          channel: 'stable'
          flutter-version: $FLUTTER_VERSION
      - name: build-web
        run: |
          flutter pub get

          if [ "${{ inputs.renderer }}" != "--wasm" ]; then
            echo "Building web with: ${{ inputs.renderer }}"
            flutter build web --release --web-renderer ${{ inputs.renderer }}
          else
            echo "Building web with wasm"
            flutter build web --wasm
          fi

      - name: Install-firebase-tools
        uses: actions/setup-node@v4
        with:
          node-version: "21.2.0"
      - run: npm install -g firebase-tools@11.0.1
      - uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.repoToken }}'
          firebaseServiceAccount: '${{ secrets.firebaseServiceAccount }}'
          channelId: live
          projectId: ${{ inputs.projectId }}
